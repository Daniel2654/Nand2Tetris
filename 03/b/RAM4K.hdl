// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // the three most left bits will determine which of the ram to select

    DMux8Way (in=load, sel=address[9..11], a=r1load, b=r2load, c=r3load,
    d=r4load, e=r5load, f=r6load, g=r7load, h=r8load);

    RAM512 (in=in, load=r1load, address=address[0..8], out=r1);
    RAM512 (in=in, load=r2load, address=address[0..8], out=r2);
    RAM512 (in=in, load=r3load, address=address[0..8], out=r3);
    RAM512 (in=in, load=r4load, address=address[0..8], out=r4);
    RAM512 (in=in, load=r5load, address=address[0..8], out=r5);
    RAM512 (in=in, load=r6load, address=address[0..8], out=r6);
    RAM512 (in=in, load=r7load, address=address[0..8], out=r7);
    RAM512 (in=in, load=r8load, address=address[0..8], out=r8);

    // choose which r[i] to be the output due to address[9..11] (left bits)
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8,
    sel=address[9..11] ,out=out);

}