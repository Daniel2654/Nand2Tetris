// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // choose register
    DMux8Way (in=load, sel=address, a=r1load, b=r2load, c=r3load, d=r4load,
    e=r5load, f=r6load, g=r7load, h=r8load);
    Register (in=in, load=r1load, out=r1);
    Register (in=in, load=r2load, out=r2);
    Register (in=in, load=r3load, out=r3);
    Register (in=in, load=r4load, out=r4);
    Register (in=in, load=r5load, out=r5);
    Register (in=in, load=r6load, out=r6);
    Register (in=in, load=r7load, out=r7);
    Register (in=in, load=r8load, out=r8);
    // choose which r[i] to be the output due to address[3] (left bits)
    Mux8Way16(a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8, sel=address,
    out=out);

}