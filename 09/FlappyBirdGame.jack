class FlappyBirdGame
{
    field Bird bird;
    field Column col;
    field Score score;
    field int direction, time;
    constructor FlappyBirdGame new()
    {
        let col = Column.new();
        let bird = Bird.new();
        let score = Score.new();
        do score.printScore();
        let direction = 0;
        let time = 0;
        do col.moveCol();
        return this;
    }

    // dipose the object
    method void dispose()
    {
        do bird.dispose();
        do Memory.deAlloc(this);
        return;
    }

    // check if the bird crashed
    method boolean isCrush()
    {

        if ((((bird.getY() > col.getLowerLen()) | ((bird.getY() < col.getUpperLen()))) &
        ((bird.getX() = (col.getX() + 32)))))
        {
            do score.gameOver();
            return true;
        }

        return false;


    }

    // moves the bird
    method void moveBird()
    {
        if (direction = 1) { do bird.moveUp(); }
        if (time = 6)
         {
            do bird.moveDown();
            if (col.moveCol()) { do score.printScore(); }
            let time = 0;
         }
        do Sys.wait(4);
        return;
    }

    // run the game
    method void run()
    {
        var char key;
        var boolean exit;
        let exit = false;
        while(~exit)
        {
            let key = Keyboard.keyPressed();
            if (key = 0) { let direction = 0; }
            if (key = 131) { let direction = 1; }
            if (key = 133) {let direction = 2; }
            let time = time + 1;
            let exit = (isCrush() | moveBird());
        }

        do bird.dispose();
        do col.dispose();
        do score.dispose();
        return;
    }

    
}

